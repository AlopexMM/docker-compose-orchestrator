#!/usr/bin/env bash
# Voy a preparar un menu luego de la verificacion de docker
# Este debe consultar si es un proyecto laravel o NodeJS
# Luego el tipo de base de datos 
# Y todos deben incluir mailhog

DOCKER_ORCHESTRATOR="${HOME}/docker-orchestrator"
source "${DOCKER_ORCHESTRATOR}/lib"
LARAVEL=0
MYSQL=0
PGSQL=0
MONGODB=0
NODE=0
PYTHON=0
COMMAND=`which docker`

if [[ $? == 1 ]]; then
    echo -e "${WHITE} Docker no se encuentra instalado ${NC}\n"
    echo -e "Puede ver la documentacion en ${WHITE}https://docs.docker.com/engine/install/${NC}\n"
    exit 0
fi

COMMAND=`which docker-compose`

if [[ $? == 1 ]]; then
    echo -e "${WHITE} Docker compose no se encuentra instalado ${NC}\n"
    echo -e "Puede ver la documentacion en ${WHITE}https://docs.docker.com/engine/install/${NC}\n"
    exit 0
fi

docker_status

# Imprimimos el primer menu consultando el nombre del proyecto
# Creamos la carpeta con el nombre del proyecto y la carpeta hija src donde se
# aloja el codigo de la app
echo "Nombre del proyecto?"
read -p "Si lo deja vacio por defecto el nombre es example-app: " PROJECT_NAME
if [[ ${PROJECT_NAME} == "" ]]; then
    PROJECT_NAME="example-app"
fi

mkdir -p "${PWD}/${PROJECT_NAME}/src"

delimiter

# Nginx
APP_PORT="8888"

# Node
NODE_VERSION="12"

# MySQL
MYSQL_DATABASE="${PROJECT_NAME}"
MYSQL_USER="usuario"
MYSQL_PASSWORD="password"
MYSQL_ROOT_PASSWORD="rootpassword"
FORDWARD_MYSQL_PORT="33069"

# Postgres
POSTGRES_DATABASE="${PROJECT_NAME}"
POSTGRES_USER="usuario"
POSTGRES_PASSWORD="password"
FORDWARD_PGSQL_PORT="54329"

# Mongodb
MONGO_INITDB_ROOT_USERNAME="usuario"
MONGO_INITDB_ROOT_PASSWORD="password"
MONGO_INITDB_DATABASE="${PROJECT_NAME}"
FORDWARD_MONGO_PORT=12500

# Mailhog
FORWARD_MAILHOG_PORT="1025"
FORWARD_MAILHOG_DASHBOARD_PORT="8025"

# Imprimimos el segundo menu consultando la tecnologia del proyecto
# Se copia el Dockerfile correspondiente
echo "Que tecnologia se utilizara en el proyecto?"
echo -e "[1] ${WHITE}NodeJS${NC}\n"
echo -e "[2] ${WHITE}Laravel${NC}\n"
echo -e "[3] ${WHITE}Python${NC}\n"
read -p "Informe el nro de la tecnologia: " TECNOLOGY
case ${TECNOLOGY} in
    "1"|1)
        NODE=1
        mkdir -p "${PWD}/${PROJECT_NAME}/src"
        mkdir -p "${PWD}/${PROJECT_NAME}/nginx"
        cp "${DOCKER_ORCHESTRATOR}/general/node_default.conf" "${PWD}/${PROJECT_NAME}/nginx/default.conf"
        echo "NODE_VERSION=${NODE_VERSION}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        ;;
    "2"|2)
        LARAVEL=1
        mkdir -p "${PWD}/${PROJECT_NAME}/nginx"
        cp "${DOCKER_ORCHESTRATOR}/general/laravel_default.conf" "${PWD}/${PROJECT_NAME}/nginx/default.conf"
        ;;
    "3"|3)
        PYTHON=1
        mkdir -p "${PWD}/${PROJECT_NAME}/nginx"
        cp "${DOCKER_ORCHESTRATOR}/general/python_default.conf" "${PWD}/${PROJECT_NAME}/nginx/default.conf"
        ;;
    *)
        echo -n "${WHITE}No informo una opcion valida${NC}\n"
        exit 0
        ;;
esac

delimiter

# Imprimimos el tercer menu consultando la base de datos
# Se crea la carpeta de persistencia de la base de datos
echo "Que base de datos se utilizara en el proyecto?"
echo -e "[1] ${WHITE}MySQL${NC}\n"
echo -e "[2] ${WHITE}Postgres${NC}\n"
echo -e "[3] ${WHITE}Mongodb${NC}\n"

read -p "Informe el nro de la base de datos: " DATABASE
case ${DATABASE} in
    "1"|1)
        MYSQL=1
        #mkdir -p "${PWD}/${PROJECT_NAME}/mysql"
        if [[ ${LARAVEL} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/laravel-mysql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
            cp "${DOCKER_ORCHESTRATOR}/laravel-mysql/Dockerfile" "${PWD}/${PROJECT_NAME}/Dockerfile"
        elif [[ ${NODE} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/node-mysql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
        elif [[ ${PYTHON} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/python-mysql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
            cp "${DOCKER_ORCHESTRATOR}/python-mysql/python-dockerfile" "${PWD}/${PROJECT_NAME}/"
        fi
        echo "MYSQL_DATABASE=${MYSQL_DATABASE}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "MYSQL_USER=${MYSQL_USER}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "MYSQL_PASSWORD=${MYSQL_PASSWORD}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "FORDWARD_MYSQL_PORT=${FORDWARD_MYSQL_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        ;;
    "2"|2)
        PGSQL=1
        mkdir -p "${PWD}/${PROJECT_NAME}/pgsql"
        if [[ ${LARAVEL} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/laravel-pgsql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
            cp "${DOCKER_ORCHESTRATOR}/laravel-mysql/Dockerfile" "${PWD}/${PROJECT_NAME}/Dockerfile"
        elif [[ ${NODE} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/node-pgsql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
        elif [[ ${PYTHON} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/python-pgsql/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
        fi
        echo "POSTGRES_DATABASE=${POSTGRES_DATABASE}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "POSTGRES_USER=${POSTGRES_USER}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "FORDWARD_PGSQL_PORT=${FORDWARD_PGSQL_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"

        ;;
    "3"|3)
        MONGODB=1
        mkdir -p "${PWD}/${PROJECT_NAME}/mongo"
        if [[ ${LARAVEL} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/laravel-mongodb/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
            cp "${DOCKER_ORCHESTRATOR}/laravel-mysql/Dockerfile" "${PWD}/${PROJECT_NAME}/Dockerfile"
        elif [[ ${NODE} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/node-mongodb/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
        elif [[ ${PYTHON} == 1 ]]; then
            cp "${DOCKER_ORCHESTRATOR}/python-mongodb/docker-compose.yml" "${PWD}/${PROJECT_NAME}/docker-compose.yml"
        fi
        echo "MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        echo "FORDWARD_MONGO_PORT=${FORDWARD_MONGO_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
        cp "${DOCKER_ORCHESTRATOR}/init-mongo.js" "${PWD}/${PROJECT_NAME}/"
        ;;
    *)
        echo -n "${WHITE}No informo una opcion valida${NC}\n"
        exit 0
        ;;
esac
#echo "UID=$(id -u)" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
#echo "GID=$(id -g)" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
echo "FORWARD_MAILHOG_PORT=${FORWARD_MAILHOG_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
echo "FORWARD_MAILHOG_DASHBOARD_PORT=${FORWARD_MAILHOG_DASHBOARD_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
echo "APP_PORT=${APP_PORT}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
echo "PROJECT_NAME=${PROJECT_NAME}" >> "${PWD}/${PROJECT_NAME}/.variables_entorno"
echo ".variables_entorno" >> "${PWD}/${PROJECT_NAME}/.gitignore"
echo ".env" >> "${PWD}/${PROJECT_NAME}/.gitignore"
echo ".vscode" >> "${PWD}/${PROJECT_NAME}/.gitignore"
cp "${DOCKER_ORCHESTRATOR}/general/adminer-dockerfile" "${PROJECT_NAME}/"

delimiter

if [[ ${LARAVEL} == 1 ]]; then
    read -p "Desea que se cree un proyecto laravel con compose? s/n: " response
    case ${response} in
        "s"|"S")
            cd ${PROJECT_NAME}/src/
            ${DOCKER_ORCHESTRATOR}/docker-orchestrator.composer create-project laravel/laravel .
            chmod -R 777 storage
            cd -
            ;;
        "n"|"N")
            echo "Si ya posee un proyecto que desea agregar copie el codigo a la carpeta src dentro de ${PROJECT_NAME}"
            ;;
        *)
            echo "La opcion utilizada no existe"
            ;;
    esac
    delimiter
elif [[ ${PYTHON} == 1 ]]; then
    cd ${PROJECT_NAME}/
    python3 -m venv venv
    sed -i "s/python-network/${PROJECT_NAME}-network/g" docker-compose.yml
    sed -i "s/python-project/${PROJECT_NAME}/g" docker-compose.yml
    cd -
fi

echo -e "${WHITE}Se creo el proyecto ${PROJECT_NAME}${NC}\n"
